{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Rei e Rainha da Derivada","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"api/","title":"Defini\u00e7\u00e3o de rotas","text":"<p>Nesta se\u00e7\u00e3o, ser\u00e3o definidas as rotas da API, bem como os m\u00e9todos HTTP e os par\u00e2metros necess\u00e1rios para cada uma delas.</p>"},{"location":"api/#autenticacao-do-google","title":"Autentica\u00e7\u00e3o do Google","text":"<p>M\u00e9todo HTTP: <code>POST</code> Rota: <code>/users/register</code></p> <p>Esta rota permite ao usu\u00e1rio fazer o login usando o Google OAuth2. Caso o usu\u00e1rio n\u00e3o tenha uma conta, uma nova ser\u00e1 criada.</p> <p>Request:</p> <p>O request deve conter um token de autentica\u00e7\u00e3o do Google.</p> <p>```js linenums=\"1\" body = {   access_token: \"token\", };</p> <pre><code>\n- `\"access_token\"`: O token de acesso do Google OAuth2.\n\n**Response:**\n\nA resposta conter\u00e1 informa\u00e7\u00f5es de autentica\u00e7\u00e3o bem-sucedida, incluindo um token de autentica\u00e7\u00e3o.\n\n**Success (200 OK)**\n\n```js linenums=\"1\"\n(headers = {\n  \"Content-Type\": \"application/json\",\n  \"Set-Cookie\":\n    \"refresh=&lt;refresh-token&gt;; Secure; HttpOnly; SameSite=Lax; Expires=&lt;expires-date&gt;\",\n}),\n  (body = {\n    access: \"token\",\n    first_name: \"name\",\n    last_name: \"name\",\n    email: \"email\",\n    picture_url: \"picture_url\",\n  });\n</code></pre> <p>Error (400 BAD REQUEST)</p> <p>```js linenums=\"1\" body = {   errors: \"descriptive error message\", };</p> <pre><code>\n## Login\n\n**M\u00e9todo HTTP:** `POST` &lt;br&gt;\n**Rota:** `/users/login`\n\nEsta rota atualiza o _refresh-token_ do usu\u00e1rio e retorna um novo _access-token_.\n\n**Request:**\n\nO request deve conter um _refresh-token_.\n\n```js linenums=\"1\"\nheaders = {\n  Cookie: \"refresh=&lt;refresh-token&gt;\",\n};\n</code></pre> <p>Response:</p> <p>Success (200 OK)</p> <p>```js linenums=\"1\" (headers = {   \"Set-Cookie\":     \"refresh=; Secure; HttpOnly; SameSite=Lax; Expires=\", }),   (body = {     access: \"token\",     first_name: \"name\",     last_name: \"name\",     email: \"email\",     picture_url: \"picture_url\",   }); <pre><code>\n## Logout\n\n**M\u00e9todo HTTP:** `POST` &lt;br&gt;\n**Rota:** `users/logout`\n\nEsta rota permite ao usu\u00e1rio fazer logout de sua conta no site.\n\n**Request:**\n\n```js linenums=\"1\"\nheaders = {\n  Cookie: \"refresh=&lt;refresh-token&gt;\",\n};\n</code></pre> <p>Response:</p> <p>Suceess (200 OK)</p> <p>Error (400 BAD REQUEST)</p> <p>Error (401 UNAUTHORIZED)</p> <p>OBSERVA\u00c7\u00c3O: As respostas n\u00e3o cont\u00e9m conte\u00fado.</p>"}]}